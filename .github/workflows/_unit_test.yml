name: Unit Test Template

on:
  workflow_call:
    inputs:
      engine:
        required: true
        type: string
      version:
        required: true
        type: string
      alias:
        required: true
        type: string
jobs:
  batch:
    runs-on: ubuntu-24.04
    name: batch
    container:
      image: ghcr.io/datadog/images-rb/engines/${{ inputs.engine }}:${{ inputs.version }}
    outputs:
      batches: "${{ steps.set-batches.outputs.batches }}"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - run: bundle lock
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: lock-${{ inputs.alias }}-${{ github.run_id }}
          retention-days: 1
          path: "*.lock"
      - run: bundle install
      - id: set-batches
        run: |
          batches_json=$(bundle exec rake github:generate_matrix)
          echo "batches=$(echo "$batches_json")" >> $GITHUB_OUTPUT
  build-test:
    name: "${{ matrix.task }} (${{ matrix.group }})"
    needs:
      - batch
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include: "${{ fromJSON(needs.batch.outputs.batches) }}"
    container:
      image: ghcr.io/datadog/images-rb/engines/${{ inputs.engine }}:${{ inputs.version }}
      env:
        BUNDLE_GEMFILE: "${{ matrix.gemfile }}"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Configure Git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: lock-${{ inputs.alias }}-${{ github.run_id }}
      - run: bundle install && bundle exec rake compile_ext
      - name: Configure RSpec
        run: ln -s .rspec-local.example .rspec-local
        shell: bash

      - name: Generate junit report name
        id: junit_report_name
        run: echo "name=${{ inputs.alias }}-$(basename $BUNDLE_GEMFILE)-${{ matrix.task }}" >> $GITHUB_OUTPUT

      - name: Test ${{ matrix.task }} with ${{ matrix.gemfile }}
        run: bundle exec rake spec:${{ matrix.task }}
        env:
          COVERAGE_DIR: coverage/versions/${{ steps.junit_report_name.outputs.name }}

      - name: Debug with SSH connection
        if: ${{ failure() && runner.debug == '1' }}
        uses: mxschmitt/action-tmate@c0afd6f790e3a5564914980036ebf83216678101 # v3.19.0
        with:
          limit-access-to-actor: true
          # This mode will wait at the end of the job for a user to connect and then to terminate the tmate session.
          # If no user has connected within 10 minutes after the post-job step started,
          # it will terminate the tmate session and quit gracefully.
          detached: true

      - name: Upload junit reports
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: junit-${{ steps.junit_report_name.outputs.name }}
          path: tmp/rspec/*.xml

      - name: Upload coverage data
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: coverage-${{ steps.junit_report_name.outputs.name }}
          path: coverage
          include-hidden-files: true # Coverage data generated by SimpleCov are hidden
