module Datadog
  module CI
    module Remote
      class LibrarySettings
        @http_response: Datadog::CI::Transport::Adapters::Net::Response?
        @json: Hash[String, untyped]?

        @require_git: bool
        @itr_enabled: bool
        @code_coverage_enabled: bool
        @tests_skipping_enabled: bool
        @flaky_test_retries_enabled: bool
        @early_flake_detection_enabled: bool
        @known_tests_enabled: bool
        @slow_test_retries: Datadog::CI::Remote::SlowTestRetries
        @faulty_session_threshold: Integer
        @test_management_enabled: bool
        @attempt_to_fix_retries_count: Integer
        @impacted_tests_enabled: bool

        def initialize: (Datadog::CI::Transport::Adapters::Net::Response? http_response, ?json: Hash[String, untyped]?) -> void

        def ok?: () -> bool

        def payload: () -> Hash[String, untyped]

        def require_git?: () -> bool

        def itr_enabled?: () -> bool

        def code_coverage_enabled?: () -> bool

        def tests_skipping_enabled?: () -> bool

        def flaky_test_retries_enabled?: () -> bool

        def early_flake_detection_enabled?: () -> bool

        def known_tests_enabled?: () -> bool

        def slow_test_retries: () -> Datadog::CI::Remote::SlowTestRetries

        def faulty_session_threshold: () -> Integer

        def test_management_enabled?: () -> bool

        def attempt_to_fix_retries_count: () -> Integer

        def impacted_tests_enabled?: () -> bool

        private

        def early_flake_detection_payload: () -> Hash[String, untyped]

        def test_management_payload: () -> Hash[String, untyped]

        def default_payload: () -> Hash[String, untyped]
      end
    end
  end
end
