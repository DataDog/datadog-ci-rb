module Datadog
  module CI
    module Context
      class Global
        @mutex: Thread::Mutex

        @test_session: Datadog::CI::TestSession?
        @test_module: Datadog::CI::TestModule?
        @test_suites: Hash[String, Datadog::CI::TestSuite]

        def initialize: () -> void

        def fetch_or_activate_test_suite: (String test_suite_name) {() -> Datadog::CI::TestSuite} -> Datadog::CI::TestSuite

        def fetch_or_activate_test_module: () {() -> Datadog::CI::TestModule} -> Datadog::CI::TestModule

        def fetch_or_activate_test_session: () {() -> Datadog::CI::TestSession} -> Datadog::CI::TestSession

        def active_test_session: () -> Datadog::CI::TestSession?

        def active_test_suite: (String test_suite_name) -> Datadog::CI::TestSuite?

        def service: () -> String?

        def inheritable_session_tags: () -> Hash[untyped, untyped]

        def active_test_module: () -> Datadog::CI::TestModule?

        def deactivate_test_session!: () -> void

        def deactivate_test_module!: () -> void

        def deactivate_test_suite!: (String test_suite_name) -> void
      end
    end
  end
end
