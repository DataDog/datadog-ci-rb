module Datadog
  module CI
    module Configuration
      module Components : Datadog::Core::Configuration::Components
        @test_visibility: Datadog::CI::TestVisibility::Component | Datadog::CI::TestVisibility::NullComponent
        @test_optimisation: Datadog::CI::TestOptimisation::Component?
        @git_tree_upload_worker: Datadog::CI::Worker
        @ci_remote: Datadog::CI::Remote::Component
        @custom_configuration: Hash[String, String]
        @test_management: Datadog::CI::TestManagement::Component
        @agentless_logs_submission: Datadog::CI::Logs::Component

        attr_reader test_visibility: Datadog::CI::TestVisibility::Component | Datadog::CI::TestVisibility::NullComponent
        attr_reader test_optimisation: Datadog::CI::TestOptimisation::Component?
        attr_reader git_tree_upload_worker: Datadog::CI::Worker
        attr_reader ci_remote: Datadog::CI::Remote::Component
        attr_reader test_retries: Datadog::CI::TestRetries::Component
        attr_reader test_management: Datadog::CI::TestManagement::Component
        attr_reader agentless_logs_submission: Datadog::CI::Logs::Component

        def initialize: (untyped settings) -> void

        def activate_ci!: (untyped settings) -> untyped

        def build_test_optimisation: (untyped settings, Datadog::CI::Transport::Api::Base? api) -> Datadog::CI::TestOptimisation::Component

        def build_test_visibility_api: (untyped settings) -> Datadog::CI::Transport::Api::Base?

        def serializers_factory: (untyped settings) -> (singleton(Datadog::CI::TestVisibility::Serializers::Factories::TestSuiteLevel) | singleton(Datadog::CI::TestVisibility::Serializers::Factories::TestLevel))

        def check_dd_site: (untyped settings) -> void

        def build_tracing_transport: (untyped settings, Datadog::CI::Transport::Api::Base? api) -> (Datadog::CI::TestVisibility::Transport? | Datadog::CI::TestVisibility::NullTransport)

        def build_coverage_writer: (untyped settings, Datadog::CI::Transport::Api::Base? api) -> Datadog::CI::TestOptimisation::Coverage::Writer?

        def build_git_upload_worker: (untyped settings, Datadog::CI::Transport::Api::Base? api) -> Datadog::CI::Worker

        def build_library_settings_client: (untyped settings, Datadog::CI::Transport::Api::Base? api) -> Datadog::CI::Remote::LibrarySettingsClient

        def build_known_tests_client: (untyped settings, Datadog::CI::Transport::Api::Base? api) -> Datadog::CI::TestVisibility::KnownTests

        def build_logs_transport: (untyped settings, Datadog::CI::Transport::Api::Base? api) -> Datadog::CI::Logs::Transport

        def build_agentless_logs_component: (untyped settings, Datadog::CI::Transport::Api::Base? api) -> Datadog::CI::Logs::Component

        def custom_configuration: (untyped settings) -> Hash[String, String]

        def configure_telemetry: (untyped settings) -> void

        def configure_time_providers: (untyped settings) -> void

        def timecop?: () -> bool
      end
    end
  end
end