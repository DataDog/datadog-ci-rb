module Datadog
  module CI
    module Transport
      module Api
        class Agentless < Base
          attr_reader api_key: String

          @api_key: String
          @citestcycle_http: Datadog::CI::Transport::HTTP
          @api_http: Datadog::CI::Transport::HTTP
          @citestcov_http: Datadog::CI::Transport::HTTP

          def initialize: (api_key: String, citestcycle_url: String, api_url: String, citestcov_url: String) -> void

          def request: (path: String, payload: String, ?headers: Hash[String, String], ?verb: ::String) -> Datadog::CI::Transport::Adapters::Net::Response

          def citestcycle_request: (path: String, payload: String, ?headers: Hash[String, String], ?verb: ::String) -> Datadog::CI::Transport::Adapters::Net::Response

          def api_request: (path: String, payload: String, ?headers: Hash[String, String], ?verb: ::String) -> Datadog::CI::Transport::Adapters::Net::Response

          def citestcov_request: (path: String, payload: String, ?headers: Hash[String, String], ?verb: ::String) -> Datadog::CI::Transport::Adapters::Net::Response

          private

          def perform_request: (Datadog::CI::Transport::HTTP client, path: String, payload: String, headers: Hash[String, String], verb: ::String, ?accept_compressed_response: bool) -> Datadog::CI::Transport::Adapters::Net::Response

          def build_http_client: (String url, compress: bool) -> Datadog::CI::Transport::HTTP

          def default_headers: () -> Hash[String, String]
        end
      end
    end
  end
end
