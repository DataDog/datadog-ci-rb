module Datadog
  module CI
    module Transport
      class EventPlatformTransport
        DEFAULT_MAX_PAYLOAD_SIZE: Numeric

        attr_reader api: Datadog::CI::Transport::Api::Base
        attr_reader max_payload_size: Numeric

        @api: Datadog::CI::Transport::Api::Base
        @max_payload_size: Numeric

        def initialize: (api: Datadog::CI::Transport::Api::Base, ?max_payload_size: Numeric) -> void

        def send_events: (Array[untyped] events) -> ::Array[Datadog::CI::Transport::Adapters::Net::Response]

        private

        def telemetry_endpoint_tag: () -> String

        def send_payload: (String payload) -> ::Datadog::CI::Transport::Adapters::Net::Response

        def encoder: () -> singleton(Datadog::Core::Encoding::MsgpackEncoder)

        def encode_events: (Array[untyped] events) -> ::Array[String]

        def write_payload_header: (untyped packer) -> void

        def pack_events: (Array[String] encoded_events) -> String

        def event_too_large?: (untyped event, String encoded_event) -> bool
      end
    end
  end
end
