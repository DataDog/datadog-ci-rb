module Datadog
  module CI
    module Transport
      module Telemetry
        def self.events_enqueued_for_serialization: (Integer count) -> void

        def self.endpoint_payload_events_count: (Integer count, endpoint: String) -> void

        def self.endpoint_payload_serialization_ms: (Float duration_ms, endpoint: String) -> void

        def self.endpoint_payload_dropped: (Integer count, endpoint: String) -> void

        def self.endpoint_payload_requests: (Integer count, endpoint: String, compressed: bool) -> void

        def self.endpoint_payload_requests_ms: (Float duration_ms, endpoint: String) -> void

        def self.endpoint_payload_bytes: (Integer | Float bytesize, endpoint: String) -> void

        def self.endpoint_payload_requests_errors: (Integer count, endpoint: String, error_type: String?, status_code: Integer?) -> void

        def self.api_requests: (String metric_name, Integer count, compressed: bool) -> void

        def self.api_requests_errors: (String metric_name, Integer count, error_type: String?, status_code: Integer?) -> void

        def self.tags: (endpoint: String) -> Hash[String, String]

        def self.set_error_tags: (Hash[String, String] tags, error_type: String?, status_code: Integer?) -> void
      end
    end
  end
end
