module Datadog
  module CI
    module TestVisibility
      module Serializers
        class Base
          MINIMUM_TIMESTAMP_NANO: 946684800000000000
          MINIMUM_DURATION_NANO: 0
          MAXIMUM_DURATION_NANO: 9223372036854775807

          CONTENT_FIELDS: Array[String | Hash[String, String]]
          REQUIRED_FIELDS: Array[String]

          @trace: Datadog::Tracing::TraceSegment
          @span: Datadog::Tracing::Span
          @options: Hash[Symbol, untyped]

          @meta: Hash[untyped, untyped]
          @errors: Hash[String, Set[String]]
          @validated: bool

          @content_fields_count: Integer
          @start: Integer
          @duration: Integer

          attr_reader trace: Datadog::Tracing::TraceSegment
          attr_reader span: Datadog::Tracing::Span
          attr_reader meta: Hash[untyped, untyped]
          attr_reader options: Hash[Symbol, untyped]

          def initialize: (Datadog::Tracing::TraceSegment trace, Datadog::Tracing::Span span, ?options: Hash[Symbol, untyped]) -> void

          def to_msgpack: (?untyped? packer) -> untyped

          def valid?: () -> bool
          def validate!: () -> void
          def validation_errors: () -> Hash[String, Set[String]]

          def content_fields: () -> ::Array[String | Hash[String, String]]
          def content_map_size: () -> Integer

          def runtime_id: () -> String

          def trace_id: () -> String

          def span_id: () -> String

          def parent_id: () -> String

          def test_session_id: () -> Integer?

          def test_module_id: () -> Integer?

          def test_suite_id: () -> Integer?

          def version: () -> 1

          def type: () -> String

          def event_type: () -> String

          def name: () -> String

          def resource: () -> String

          def service: () -> String

          def start: () -> Integer

          def duration: () -> Integer

          def metrics: () -> Hash[String, untyped]

          def error: () -> Integer

          def self.calculate_content_map_size: (Array[String | Hash[String, String]] fields_list) -> Integer

          private

          def validate_start_time!: () -> void
          def validate_duration!: () -> void
          def validate_required_fields!: () -> void
          def validate_required!: (String field) -> void
          def validate_greater_than_or_equal!: (String field, Integer value) -> void
          def validate_less_than_or_equal!: (String field, Integer value) -> void
          def add_error: (String field, String message) -> void

          def required_fields: () -> Array[String]

          def write_field: (untyped packer, String field_name, ?String? method) -> untyped
          def time_nano: (Time time) -> Integer
          def duration_nano: (Float duration) -> Integer

          def to_integer: (String? value) -> Integer?

          def content_fields_count: () -> Integer

          def test_visibility: () -> Datadog::CI::TestVisibility::Component
        end
      end
    end
  end
end
