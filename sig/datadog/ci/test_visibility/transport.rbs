module Datadog
  module CI
    module TestVisibility
      class Transport
        @api_key: String
        @http: Datadog::CI::Transport::HTTP
        @serializers_factory: singleton(Datadog::CI::TestVisibility::Serializers::Factories::TestLevel)

        def initialize: (api_key: String, ?site: ::String, ?serializers_factory: singleton(Datadog::CI::TestVisibility::Serializers::Factories::TestLevel)) -> void

        def send_traces: (Array[Datadog::Tracing::TraceSegment] traces) -> ::Array[Datadog::CI::Transport::HTTP::Response]

        private

        def pack_events: (Array[String] encoded_events) -> String
        def encode_traces: (Array[Datadog::Tracing::TraceSegment] traces) -> ::Array[String]
        def encoder: () -> singleton(Datadog::Core::Encoding::MsgpackEncoder)
      end
    end
  end
end
