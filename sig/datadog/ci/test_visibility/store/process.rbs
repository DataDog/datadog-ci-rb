module Datadog
  module CI
    module TestVisibility
      module Store
        class Process
          @mutex: Monitor

          @test_session: Datadog::CI::TestSession?
          @test_module: Datadog::CI::TestModule?
          @test_suites: Hash[String, Datadog::CI::TestSuite]
          @readonly_test_session: Datadog::CI::TestSession?
          @readonly_test_module: Datadog::CI::TestModule?

          def initialize: () -> void

          def fetch_or_activate_test_suite: (String test_suite_name) {() -> Datadog::CI::TestSuite} -> Datadog::CI::TestSuite

          def fetch_single_test_suite: () -> Datadog::CI::TestSuite?

          def fetch_or_activate_test_module: () {() -> Datadog::CI::TestModule} -> Datadog::CI::TestModule

          def fetch_or_activate_test_session: () {() -> Datadog::CI::TestSession} -> Datadog::CI::TestSession

          def active_test_session: () -> Datadog::CI::TestSession?

          def active_test_suite: (String test_suite_name) -> Datadog::CI::TestSuite?

          def service: () -> String?

          def active_test_module: () -> Datadog::CI::TestModule?

          def deactivate_test_session!: () -> void

          def deactivate_test_module!: () -> void

          def deactivate_test_suite!: (String test_suite_name) -> void

          def stop_all_test_suites: () -> void

          def set_readonly_test_session: (Datadog::CI::TestSession? test_session) -> void

          def set_readonly_test_module: (Datadog::CI::TestModule? test_module) -> void

          attr_reader readonly_test_session: Datadog::CI::TestSession?
          attr_reader readonly_test_module: Datadog::CI::TestModule?
        end
      end
    end
  end
end