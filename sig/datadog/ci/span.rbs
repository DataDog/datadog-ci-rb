module Datadog
  module CI
    class Span
      @tracer_span: Datadog::Tracing::SpanOperation

      attr_reader tracer_span: Datadog::Tracing::SpanOperation

      def initialize: (Datadog::Tracing::SpanOperation tracer_span) -> void

      def id: () -> Integer

      def trace_id: () -> Integer

      def name: () -> String

      def service: () -> String

      def undefined?: () -> bool

      def passed?: () -> bool

      def failed?: () -> bool

      def skipped?: () -> bool

      def status: () -> String?

      def passed!: () -> void

      def failed!: (?exception: untyped?) -> void

      def skipped!: (?exception: untyped?, ?reason: String?) -> void

      def get_tag: (String key) -> untyped?

      def set_tag: (String key, untyped? value) -> void

      def clear_tag: (String key) -> void

      def get_metric: (String key) -> Numeric?

      def set_metric: (String key, untyped value) -> void

      def set_tags: (Hash[untyped, untyped] tags) -> void

      def finish: () -> void

      def type: () -> String

      def set_environment_runtime_tags: () -> void

      def set_default_tags: () -> void

      def set_parameters: (Hash[String, Object] arguments, ?Hash[String, Object] metadata) -> void

      def git_repository_url: () -> String?

      def git_commit_sha: () -> String?

      def git_branch: () -> String?

      def git_tag: () -> String?

      def os_architecture: () -> String?

      def os_platform: () -> String?

      def os_version: () -> String?

      def runtime_name: () -> String?

      def runtime_version: () -> String?

      def source_file: () -> String?

      def base_commit_sha: () -> String?

      private

      def test_visibility: () -> Datadog::CI::TestVisibility::Component
    end
  end
end
