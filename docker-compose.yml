version: '3.2'
services:
  # MRI
  datadog-ci-2.7:
    image: ghcr.io/datadog/dd-trace-rb/ruby:2.7.6-dd
    command: /bin/bash
    env_file: ./.env
    environment: &common-environment
      BUNDLE_GEMFILE: /app/Gemfile-2.7
      DD_AGENT_HOST: ddagent
      TEST_DATADOG_INTEGRATION: 1
      DDTRACE_CI: true
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - extension-build-tmp:/app/tmp
      - bundle-2.7:/usr/local/bundle
      - "ddagent_var_run:${TEST_DDAGENT_VAR_RUN}"
  datadog-ci-3.0:
    image: ghcr.io/datadog/dd-trace-rb/ruby:3.0.4-dd
    command: /bin/bash
    env_file: ./.env
    environment: &common-environment-3x
      BUNDLE_GEMFILE: /app/Gemfile-3.0
      DD_AGENT_HOST: ddagent
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - extension-build-tmp:/app/tmp
      - bundle-3.0:/usr/local/bundle
      - "ddagent_var_run:${TEST_DDAGENT_VAR_RUN}"
  datadog-ci-3.1:
    image: ghcr.io/datadog/dd-trace-rb/ruby:3.1.2-dd
    command: /bin/bash
    env_file: ./.env
    environment:
      <<: *common-environment-3x
      BUNDLE_GEMFILE: /app/Gemfile-3.1
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - extension-build-tmp:/app/tmp
      - bundle-3.1:/usr/local/bundle
      - "ddagent_var_run:${TEST_DDAGENT_VAR_RUN}"
  datadog-ci-3.2:
    image: ghcr.io/datadog/dd-trace-rb/ruby:3.2.0-dd
    command: /bin/bash
    env_file: ./.env
    environment:
      <<: *common-environment-3x
      BUNDLE_GEMFILE: /app/Gemfile-3.2
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - extension-build-tmp:/app/tmp
      - bundle-3.2:/usr/local/bundle
      - "ddagent_var_run:${TEST_DDAGENT_VAR_RUN}"
  datadog-ci-3.3:
    image: ghcr.io/datadog/dd-trace-rb/ruby:3.3.0-dd
    command: /bin/bash
    env_file: ./.env
    environment:
      <<: *common-environment-3x
      BUNDLE_GEMFILE: /app/Gemfile-3.3
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - extension-build-tmp:/app/tmp
      - bundle-3.3:/usr/local/bundle
      - "ddagent_var_run:${TEST_DDAGENT_VAR_RUN}"
  # ADD NEW RUBIES HERE
  datadog-ci-jruby-9.4:
    image: ghcr.io/datadog/dd-trace-rb/jruby:9.4.0.0-dd
    command: /bin/bash
    env_file: ./.env
    environment:
      <<: *common-environment
      BUNDLE_GEMFILE: /app/Gemfile-jruby-9.4
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - bundle-jruby-9.4:/usr/local/bundle
      - "ddagent_var_run:${TEST_DDAGENT_VAR_RUN}"
  ddagent:
    image: datadog/agent
    environment:
      - DD_APM_ENABLED=true
      - DD_BIND_HOST=0.0.0.0
      - "DD_API_KEY=${DD_API_KEY}"
      - DD_HOSTNAME=dd-trace-rb-ci
      - DD_APM_RECEIVER_SOCKET=/var/run/datadog/apm.socket
    expose:
      - "8125/udp"
      - "8126"
    ports:
      - "127.0.0.1:${DD_METRIC_AGENT_PORT}:8125/udp"
      - "127.0.0.1:${DD_TRACE_AGENT_PORT}:8126"
    volumes:
      - ddagent_var_run:/var/run/datadog
volumes:
  bundle-2.7:
  bundle-3.0:
  bundle-3.1:
  bundle-3.2:
  bundle-3.3: # ADD NEW RUBIES HERE

  bundle-jruby-9.4:
  ddagent_var_run: # Temporary folder used while compiling the profiling native extension. We place this in a volume to avoid the

  # massive performance hit (seconds to minutes) that we get when the tmp folder is shared with the host on macOS.
  # Hopefully this will be fixed by
  # https://www.docker.com/blog/speed-boost-achievement-unlocked-on-docker-desktop-4-6-for-mac/
  # (which is not available for those of us still on macOS 11).
  extension-build-tmp:
